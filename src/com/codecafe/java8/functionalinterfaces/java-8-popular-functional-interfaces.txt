----------------------------------------------
 Some popular functional interfaces in Java 8
----------------------------------------------

------------------------------------------------------------------
 Functional Interface      Method                  Mostly Used By
------------------------------------------------------------------
 Supplier<T>               T get()                 factories

 Predicate<T>              boolean test(T)         filter

 Function<T, R>            R apply(T)              map

 Consumer<T>               void accept(T)          forEach()
 

--------------------------------------------------------------------------------------------------------------------------------------------
Functional interface         Function descriptor         Primitive specializations
--------------------------------------------------------------------------------------------------------------------------------------------
Predicate<T>                 T -> boolean                IntPredicate, LongPredicate, DoublePredicate

Consumer<T>                  T -> void                   IntConsumer, LongConsumer, DoubleConsumer

Function<T, R>               T -> R                      IntFunction<R>, IntToDoubleFunction, IntToLongFunction,
                                                         LongFunction<R>, LongToDoubleFunction, LongToIntFunction,
                                                         DoubleFunction<R>, ToIntFunction<T>, ToDoubleFunction<T>, ToLongFunction<T>
                                                         
Supplier<T>	                 () -> T                     BooleanSupplier, IntSupplier, LongSupplier, DoubleSupplier

UnaryOperator<T>             T -> T                      IntUnaryOperator, LongUnaryOperator, DoubleUnaryOperator

BinaryOperator<T>            (T, T) -> T                 IntBinaryOperator, LongBinaryOperator, DoubleBinaryOperator

BiPredicate<L, R>            (L, R) -> boolean

BiConsumer<T, U>             (T, U) -> void              ObjIntConsumer<T>, ObjLongConsumer<T>, ObjDoubleConsumer<T>

BiFunction<T, U, R>          (T, U) -> R                 ToIntBiFunction<T, U>, ToLongBiFunction<T, U>, ToDoubleBiFunction<T, U>




----------------------------------------------------------------------------------
Interface                    Function Signature          Example
----------------------------------------------------------------------------------
UnaryOperator<T>             T apply(T t)                String::toLowerCase

BinaryOperator<T>            T apply(T t1, T t2)         BigInteger::add

Predicate<T>                 boolean test(T t)           Collection::isEmpty

Function<T, R>               R apply(T t)                Arrays::asList

Supplier<T>                  T get()                     Instant::now

Consumer<T>                  void accept(T t)            System.out::println